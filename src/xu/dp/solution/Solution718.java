package xu.dp.solution;

public class Solution718 {
    /*
     * 最长重复子数组，这题的思路可以借鉴【最长重复子序列】，其中子序列可以是不连续的，而子数组必须是连续的
     * A 数组的长度为 m, B 数组的长度为 n
     * dp 是一个 (m+1)*(n+1) 的矩阵，多余的部分是为了存储初始值
     * dp[m][n] 表示 A[1...m] 和 B[1...n] 两个数组中最长重复子数组的长度，假设 A,B 数组下标是从 1 开始
     * dp[0][0] = dp[0][n] = dp[m][0] = 0
     * 当 A[m] == B[n] 时，dp[m][n] = dp[m-1][n-1] + 1
     * 当 A[m] != B[n] 时，dp[m][n] = 0
     */
}
