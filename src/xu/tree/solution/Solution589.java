package xu.tree.solution;

public class Solution589 {
    /*
     * N 叉树的前序遍历
     *
     * 使用递归解法很简单，但是这里使用非递归解法。我们使用一个栈来帮助我们得到前序遍历，需要保证栈顶的节点就是我们当前遍历到的节点。
     * 我们首先把根节点入栈，因为根节点是前序遍历中的第一个节点。随后每次我们从栈顶取出一个节点 u，它是我们当前遍历到的节点，
     * 并把 u 的所有子节点逆序推入栈中。例如 u 的子节点从左到右为 v1, v2, v3，那么推入栈的顺序应当为 v3, v2, v1，这样就保证了
     * 下一个遍历到的节点（即 u 的第一个子节点 v1）出现在栈顶的位置。
     */
}
