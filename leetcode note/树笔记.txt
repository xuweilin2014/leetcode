树：

235【1】、951【1】、669【1】、114【1】

173、988【1】、450、108【1】、543【1】

106、95、109【1】、652、117【1】

199【1】

101【1】、104【1】、111【1】、222

257【1】、404【1】、513【1】、112【1,重点】、113【1,重点】、226【1】

654【1】、617【1】

236【1】、701【1】、110【1】、105、538【1】

1315【1】、1008【1,重点】、814【1】、894、1022【1,重点】、687【1】

1026【1】

使用到了二叉搜索树的性质，也就是在对二叉搜索树进行中序遍历的时候，要保存遍历的前一个节点：
98【1】、530【1,重点】、501【1,重点】、700【1】

N 叉树：
559【1】、589【1，N叉树的非递归前序遍历，和二叉树的前序遍历可以放到一起。重点】

层序遍历：
637【1】、107【1】、102【1】

二叉树的前、中、后序遍历（递归和非递归）：
145【1】、144【1】、94【1】
前序遍历和后序遍历其实可以使用一套模板来解决，只不过，把访问节点的函数 visit 放到不同的地方而已，所以在以后做 144 和 94
之前，看一下严蔚敏书中【非递归中序遍历】的解法，然后使用这一套模板来解决中序和前序的非递归遍历问题